server:
  port: 8006
spring:
  application:
    name: springbootDemo
  profiles:
    active: test
    include:
      - kafka
  kafka:
    broker.hosts: 127.0.0.1:9092
    # zkHost
    zk.hosts:
    ############ consumer ##########
    # 自动提交offset
    consumer.enable.auto.commit: false
    # 客户端会话超时时间
    consumer.session.timeout: 60000
    # kafka批量提交大小
    consumer.auto.commit.interval: 10
    # 无提交offset时从最新的位置开始消费
    consumer.auto.offset.reset: latest
    # 消费者并发消费线程数
    consumer.concurrency: 1
    ############ producer #######
    producer.retries: 3
    # 消息批量发送大小
    producer.batch.size: 4096000
    # 在消息批量发送前等待其他其他消息加入的时间
    producer.linger: 1
    # 消息发送内存buffer大小
    producer.buffer.memory: 4096000
eureka:
  client:
    service-url:
      defaultZone: http://zchao_ray:Hello1234@localhost:8100/eureka
    fetch-registry: true
    register-with-eureka: true
    registry-fetch-interval-seconds: 10 #client间隔多久去拉取服务注册信息（默认30秒）对于api-gateway如果要迅速获取服务注册状态，可以缩小该值
ribbon:
  ServerListRefreshInterval: 10000
management:
  endpoint:
    health:
      show-details: always
    #可以关闭指定的端点
    shutdown:
      enabled: true
  endpoints:
    web:
      exposure:
        include: "*"
hystrix:
  command:
    default:
      execution:
        timeout:
          enabled: true
        isolation:
          strategy: THREAD
          thread:
            timeoutInMilliseconds: 300000
  threadpool:
    default:
      coreSize: 100 #并发执行的最大线程数，默认10
      maxQueueSize: 200 #BlockingQueue的最大队列数，默认值-1
      queueSizeRejectionThreshold: 100 #即使maxQueueSize没有达到，达到queueSizeRejectionThreshold该值后，请求也会被拒绝，默认值5

logging:
  level:
    com.zhangchao.springbootDemo: debug